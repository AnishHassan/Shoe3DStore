{"version":3,"file":"static/js/184.3a547a20.chunk.js","mappings":"kMAsBMA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8UAGnB,SAACC,GAAK,OAAMA,EAAMC,SAAW,GAAM,EAAG,IAoB7CC,EAAeL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,qXACjB,SAACC,GAAK,OAAMA,EAAMC,SAAW,GAAM,CAAC,IAqB3CG,EAAiBP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,+LAIzB,SAAAO,GAAA,IAAEC,EAAKD,EAALC,MAAK,OAAIA,GAAY,EAAE,IAOrB,SAAAC,GAAO,OAAAA,EAALD,MAAe,MAAM,EAAE,IAqCrC,UAhCqC,SAAHE,GAA4B,IAAtBC,EAAQD,EAARC,SAASH,EAAKE,EAALF,MAE7CI,GAA+CC,EAAAA,EAAAA,UAAyB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtEI,EAAeF,EAAA,GAAEG,EAAmBH,EAAA,GACrCI,GAAWC,EAAAA,EAAAA,MAOjB,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACf,EAAgB,CAACG,MAAOA,EAAMc,SAC1BX,EAASY,KAAI,SAACC,GAAO,OAClBC,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACIF,EAAAA,EAAAA,KAACvB,EAAa,CACV6B,IAAKF,EAAQG,SAEbzB,UAAyB,OAAfc,QAAe,IAAfA,OAAe,EAAfA,EAAiBY,MAAOJ,EAAQI,KAAM,EAChDC,QAAS,kBAfL,SAACL,GACzBP,EAAoBO,GACpBN,GAASY,EAAAA,EAAAA,IAAmBN,GAChC,CAYuCO,CAAoBP,EAAQ,GAFtCA,EAAQI,KAIjBH,EAAAA,EAAAA,MAACtB,EAAY,CAACD,UAAyB,OAAfc,QAAe,IAAfA,OAAe,EAAfA,EAAiBY,MAAOJ,EAAQI,KAAM,EAAMN,SAAA,CAAC,IACxD,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASQ,MAAM,WAEnB,OAM1B,C","sources":["3DProducts/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { setSelectedProduct } from '../store/appSlice';\r\n\r\n\r\n// Define the data structure for product information\r\nexport interface Product {\r\n    id: number;\r\n    name: string;\r\n    imageUrl: string;\r\n    modelUrl?: string;\r\n    price?: number;\r\n}\r\n\r\n// Define the props for the component\r\ninterface Props {\r\n    products: Product[];\r\n    right?:string;\r\n}\r\n\r\n// Define the styled components for the product buttons\r\nconst ProductButton = styled.img<{ isActive: boolean }>`\r\n  width: 120px;\r\n  height: 120px;\r\n  opacity: ${(props) => (props.isActive ? 0.9 : 0.4)};\r\n  transition: opacity 0.3s ease-in;\r\n  cursor : pointer;\r\n  @media (max-width: 1440px) {\r\n  width: 95px;\r\n  height: 95px;\r\n\r\n  }\r\n  @media (max-width: 576px) {\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  }\r\n  @media (max-width: 420px) {\r\n  width: 70px;\r\n  height: 70px;\r\n\r\n  }\r\n`;\r\n\r\nconst ProductPrice = styled.h4<{ isActive: boolean }>`\r\n  opacity: ${(props) => (props.isActive ? 0.9 : 0)};\r\n  transition: opacity 0.3s ease-in;\r\n  font-family: 'Poppins', sans-serif;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  margin-top : 4px;\r\n  color : #fff;\r\n  margin-left:20px;\r\n   @media (max-width: 1440px) {\r\n  font-size: 14px;\r\n  }\r\n  @media(max-width:1330px){\r\n    margin-left:20px\r\n  }\r\n  @media(max-width:410px){\r\n    margin-left:10px\r\n  }\r\n`;\r\ninterface ProductContainerProps{\r\n    right:any;\r\n}\r\nconst ProductContainer=styled.div<ProductContainerProps>`\r\n    \r\nposition:absolute;\r\ndisplay:flex;\r\nright:${({right})=>right?right:''};\r\ngap:0px;\r\n@media(max-width:1300px){\r\n    flex-direction:column;\r\n}\r\n@media(max-width:537px){\r\n    top:8rem;\r\n    right:${({right})=>right?'0px':''};\r\n}\r\n`\r\n\r\n\r\nconst ProductView: React.FC<Props> = ({ products,right }) => {\r\n\r\n    const [selectedProduct, setSelectedProduct1] = useState<Product | null>(null);\r\n    const dispatch = useDispatch();\r\n    const handleProductSelect = (product: Product) => {\r\n        setSelectedProduct1(product);\r\n        dispatch(setSelectedProduct(product));\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <ProductContainer right={right}>\r\n                {products.map((product) => (\r\n                    <div >\r\n                        <ProductButton\r\n                            src={product.imageUrl}\r\n                            key={product.id}\r\n                            isActive={selectedProduct?.id === product.id || false}\r\n                            onClick={() => handleProductSelect(product)}\r\n                        />\r\n                        <ProductPrice isActive={selectedProduct?.id === product.id || false}>\r\n                            ${product?.price}.00\r\n                        </ProductPrice>\r\n                    </div>\r\n                ))}\r\n            </ProductContainer>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductView;\r\n\r\n"],"names":["ProductButton","styled","_templateObject","_taggedTemplateLiteral","props","isActive","ProductPrice","_templateObject2","ProductContainer","_templateObject3","_ref","right","_ref2","_ref3","products","_useState","useState","_useState2","_slicedToArray","selectedProduct","setSelectedProduct1","dispatch","useDispatch","_jsx","_Fragment","children","map","product","_jsxs","src","imageUrl","id","onClick","setSelectedProduct","handleProductSelect","price"],"sourceRoot":""}